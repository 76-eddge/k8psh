# K8PSH Configuration

# The configuration is divided into 2 sections: client settings and server settings.
# The client settings are used when invoking an executable that will run in a different container.
# The server settings are sections for each server daemon to configure the executables.

# Configuration strings can be of the following forms: value, "value", or 'value'. (Unquoted values cannot contain whitespace.)
# Double quoted strings can contain escape sequences: \" (alternate ""), \\, \', \b, \t, \n, \f, \r, \0, \x9e.
# Single quoted strings only have one escape sequence: ''
# Unquoted and double quoted strings can contain environment variable references of the form ${NAME:-default_value}.

# Client Settings
#
# The client settings consist of "key" = "value" pairs.
workingDirectory = ${WORKSPACE:-.} # This will set the working directory to the value of the environment variable WORKSPACE, relative to the config file

# Server Settings
#
# Server sections start with "[ name:port ]", identifying the hostname of the server and an optional port (unspecified ports are numbered sequentially from the previous port, with a default starting value of 1120).
# Each section contains a list of all executables in the form "[name] ENV_1= ?OPTIONAL_ENV= ENV_2= =PATH= executable".
# The first argument that does not end in an equals sign (or the command name if all arguments end in an equals sign) is considered to be the executable (argv[0]).
# Additional arguments may also be specified.
# Client arguments will be appended to the end of the argument list when invoking the executable.
# Required environment variables will be unset if not specified.
# Optional environment variables begin with a '?' and will be inherited from the running server if not specified.
# Inherited environment variables begin with a '=' and will be inherited from the running server whether specified or not.
[ gcc ]
gcc
g++

[ java ]
java =LD_LIBRARY_PATH= /lib/ld-linux-x86-64.so.2 /usr/bin/java

[ gradle ]
gradle ?GRADLE_USER_HOME= ?GRADLE_OPTS=
javac

[ make ]
make
